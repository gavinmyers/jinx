apply plugin: 'scala'


allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: 'scala'


    version = '1.0'
    ext {
        appName = "jinx"
        gdxVersion = '1.8.0'
        roboVMVersion = '1.12.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.7.0'
        gdxUtilsVersion = '0.13.1'
        slfjVersion = '1.7.5'
        scalaVersion = '2.11.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

dependencies{
    compile "org.slf4j:slf4j-api:+"
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile "com.badlogicgames.gdx:gdx-freetype-platform:+:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-freetype:+"
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:+"
    compile "com.badlogicgames.gdx:gdx-platform:+:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:+:natives-desktop"
    compile "net.dermetfan.libgdx-utils:libgdx-utils:+"
    compile "net.dermetfan.libgdx-utils:libgdx-utils-box2d:+"
    compile "com.badlogicgames.box2dlights:box2dlights:+"
}

task run(type: JavaExec, dependsOn: classes) {
    jvmArgs("-XX:MaxPermSize=2048m")
    main = 'Main'
    workingDir = "assets"
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '1g'
        jvmArgs = ['-XX:MaxPermSize=512m']
    }
}
tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}